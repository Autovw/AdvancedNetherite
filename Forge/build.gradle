plugins {
    id 'idea'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
}

group = 'com.autovw.advancednetherite'
version = "${mod_version}-${minecraft_version}"
archivesBaseName = 'advancednetherite-forge'

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'official', version: minecraft_version
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    reobf = false

    copyIdeResources = true

    runs {
        client {
            workingDirectory project.file('run')
            ideaModule "${rootProject.name}.${project.name}.main"
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.disableRefMap', 'true'
            mods {
                advancednetherite {
                    source sourceSets.main
                    //source project(":Common").sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            ideaModule "${rootProject.name}.${project.name}.main"
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.disableRefMap', 'true'
            mods {
                advancednetherite {
                    source sourceSets.main
                    //source project(":Common").sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            ideaModule "${rootProject.name}.${project.name}.main"
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.disableRefMap', 'true'
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                advancednetherite {
                    source sourceSets.main
                    //source project(":Common").sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url = "https://www.cursemaven.com"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    compileOnly project(path: ':Common')

    //runtimeOnly fg.deobf("curse.maven:catalogue-459701:${catalogue_forge_version}")
    //runtimeOnly "curse.maven:configured-457570:${configured_forge_version}"
    runtimeOnly "curse.maven:jei-238222:${jei_forge_version}"
    //implementation fg.deobf("curse.maven:detailarmorbar-520755:${detailab_forge_version}")

    // Hack fix for now, force jopt-simple to be exactly 5.0.4 because Mojang ships that version, but some transtive dependencies request 6.0+
    implementation('net.sf.jopt-simple:jopt-simple:5.0.4') { version { strictly '5.0.4' } }
}

tasks.withType(JavaCompile) {
    source(project(":Common").sourceSets.main.allSource)
}

processResources {
    from project(":Common").sourceSets.main.resources
}

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            mod_version: mod_version
    ]
    filesMatching(['META-INF/mods.toml']) {
        expand replaceProperties
    }
    inputs.properties replaceProperties
}

sourceSets.each {
    def dir = layout.buildDirectory.dir("sourcesSets/$it.name")
    it.output.resourcesDir = dir
    it.java.destinationDirectory = dir
}
